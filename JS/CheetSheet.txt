### For-of loop ###
let str = "JavaScriptBootcamp"

for( let i of str){ // iterator or iterating each word of a string
    console.log(i); 
}

### Count Size of the string ###
let size = str.length;

### for-in loop ###

let associate ={
    name : "Suraj Kumar",                       // name = KEY
    organization : "Cognizant",                 //organization = KEY
    domain : "QEA-NFT",                         //   domain       "
    tools : "Neoload, jMeter and LoadRunner",   //   tools        "
    isWorking : true,                           //  isWorking     "
}

for(let key in associate){
    console.log("KEY = ", key, "VALUE = ", associate[key] ); // for printing the key and values of an object
}

### String interpolation ###  //
let obj = {
    item : "pen",
    cost : 10,
}

console.log("the product is : ", obj.item, "and the price is : ", obj.cost, "rupees");      //This is normal way
let ouput = `the product is : ${obj.item} and the price is : ${obj.cost} rupees`;           //This is the use of template literal

NOTE : in template literal ${obj.cost} the value becomes string as the name is STRING interpolation

### Breaking line in JS ### 
use --> \n
use --> \t FOR TAB SPACE

### Properties ###
let arr = [10,20,30,40,50];
console.log(arr.length) --> this will print the length of the array


### String Methods ###

str.toUpperCase() --> it will capitalise all the small letter and will keep capital letter as it is
str.toLowerCase() --> it will convert all capital letter to the small letter and will keep the samll letter as it is
str.trim()        --> it will remove all the spaces between words or letter
str.slice(start,end) --> it will crop the string from the starting index to (GIVEN end - 1) // let str = "JavaScript"; let output = str.slice(2,6); ANS :- vaSc
str1.concat(str2)    --> this will join two string together
str.replace(searchVal, newVal) --> this method will search the "searchVal" from the string and replace it with newVal
str.charAt(index) --> this will find the character present at given index


### Arrays ###
Push() --> add to end
Pop() --> delete from end & return
toString() --> converts array to string
arr1.concat(arr2); --> this will add one array with another array of same data type
unshift() --> add to start
shift()     --> delte from start and return
Slice(start,end) --> this will work same as string
Splice(startIdx,delCount,newElement) --> this will target the startIdx and if we give delCount then the element from startIdx to startIdx+delCount will be deleted and if we give newElement(102,103) then 102,103 will be plced in place of removed element

### Arrow Function ###      //Compact way of writing a Function

const functionName = (param1,param2)=>{

    ***doing required operation***

}
 

 ### forEach Loop in Arrays ###

 arr.forEach(callBackFunction)
callBackFunction : Here, it is a function to excute for each elementin the arary
*** A callback is a funtion passed as an argument to another function.

let arr = [1,2,3,4,5];

************Normal Method ***************
*  arr.forEach(function printVal(val){  *
*    console.log(val);                  *
*   });                                 *
*****************************************

***********Arrow Function****************
*                                       *
* arr.forEach((val)=>{                  *
*   console.log(val);                   *
*   })                                  *
*****************************************
There are 3 parameters in callback function 
(1) VALUE
(2) INDEX           (Optional)
(3) ARRAY itself    (Optional)

strArr.forEach((val,idx,strArr)=>{
   console.log(val,idx,strArr);
  }) 



### Mapping in Array in JS  ###            // Return a new Array after doing operation

arr.map(callbackFnx(value,index,array))

let newArr = arr.map((val)=>{
    return val*2;
})




### Filter in Array in JS  ### 

let newArr = arr.filter((val)=>{
    return val%2===0;
});




### Reduce in Array in JS  ###          // To perform some operration & reduce the array to a single value. It returns that single value.
let reduceOutput = arr.reduce((res,curr)=>{
    return res+curr;
});
